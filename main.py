{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyOMhbxetJqXRRmY+tfh5nFF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":29,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"36qXBELbz08c","executionInfo":{"status":"error","timestamp":1671314430038,"user_tz":300,"elapsed":3440,"user":{"displayName":"Nhat Huy Trinh","userId":"12245652219387330779"}},"outputId":"c94a2e09-7227-421d-a0a0-f922efd9e58c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: astropy in /usr/local/lib/python3.8/dist-packages (4.3.1)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.8/dist-packages (from astropy) (1.21.6)\n","Requirement already satisfied: pyerfa>=1.7.3 in /usr/local/lib/python3.8/dist-packages (from astropy) (2.0.0.1)\n"]},{"output_type":"error","ename":"IndexError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mIndexError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-29-9574d717d1e7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     39\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0m__name__\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"__main__\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 41\u001b[0;31m     \u001b[0mperiod_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcomputePeriod\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/MyDrive/Github/DataAnalysisProject_SDSS/binaryStarVisit1000.fits'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-29-9574d717d1e7>\u001b[0m in \u001b[0;36mcomputePeriod\u001b[0;34m(fits_file)\u001b[0m\n\u001b[1;32m     24\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     25\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0mapogee_id\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# iterate through each star using the star's apogee_id\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 26\u001b[0;31m             \u001b[0mtime\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m13\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Append each visit's data\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     27\u001b[0m             \u001b[0mvhelio\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvhelio\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m9\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     28\u001b[0m             \u001b[0mvrelerr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvrelerr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/astropy/io/fits/fitsrec.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m     71\u001b[0m                               key.step, self)\n\u001b[1;32m     72\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 73\u001b[0;31m             \u001b[0mindx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     74\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     75\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mindx\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_nfields\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.8/dist-packages/astropy/io/fits/fitsrec.py\u001b[0m in \u001b[0;36m_get_index\u001b[0;34m(self, indx)\u001b[0m\n\u001b[1;32m    139\u001b[0m                 \u001b[0ms\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mslice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbase\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstart\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbase\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mend\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbase\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    140\u001b[0m             \u001b[0mindices\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindices\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 141\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mindices\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mindx\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    142\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    143\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mIndexError\u001b[0m: index 13 is out of bounds for axis 0 with size 13"]}],"source":["!pip install astropy\n","from astropy.timeseries import LombScargle\n","from astropy import units\n","from astropy.io import fits\n","import numpy as np\n","\n","def fits_conversion(array):\n","    return\n","\n","###This method returns the period for each star in a fits file.\n","def computePeriod(fits_file):\n","    hdu = fits.open(fits_file)  # Open .fits data file\n","    data = hdu[1].data  # Get the data\n","    hdu.close()  # Close the file\n","\n","    # apogee_id  apstar_id ra  dec nvisits starSNR vscatter  verr  visit_id  vhelio  vrelerr visitSNR  starflag  mjd\n","    # 2M00000662+7528598 apogee.apo25m.stars.120+12.2M00000662+7528598 0.027622  75.483292 9 827.6752  2.006593  0.08394658  apogee.apo25m.dr17.7545.56933.190 15.74034  0.07290228  233.139 1179648 56933\n","    period = np.array([])  # An array to store the period corresponding to each star (apogee_id)\n","    for i in (0, len(data)):\n","        apogee_id = data[i][0]\n","        time = np.array([])\n","        vhelio = np.array([])\n","        vrelerr = np.array([])\n","\n","        while (data[i][0] == apogee_id):  # iterate through each star using the star's apogee_id\n","            time = np.append(time, data[i][13])  # Append each visit's data\n","            vhelio = np.append(vhelio, data[i][9])\n","            vrelerr = np.append(vrelerr, data[i][10])\n","            i += 1\n","\n","        time = time * units.day  # Add units to the star's data arrays\n","        vhelio = vhelio * units.km / units.s\n","        vrelerr = vrelerr * units.km / units.s\n","\n","        frequency, power = LombScargle(time, vhelio, vrelerr).autopower()  # Compute Lomb-Scargle power\n","        max_frequency = frequency[np.argmax(power)]  # Find the frequency with max power\n","        period.append([apogee_id, max_frequency])  # Append to the period array\n","\n","\n","if __name__ == \"__main__\":\n","    period_data = computePeriod('/content/drive/MyDrive/Github/DataAnalysisProject_SDSS/binaryStarVisit1000.fits')\n"]},{"cell_type":"code","source":["!pip install astropy\n","from astropy.timeseries import LombScargle\n","from astropy import units\n","from astropy.io import fits\n","import numpy as np\n","\n","hdu1 = fits.open('/content/drive/MyDrive/Github/DataAnalysisProject_SDSS/binaryStarVisit1000.fits')  # Open .fits data file\n","data = hdu1[1].data  # Get the data\n","hdu1.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Tzemd-OvDjcf","executionInfo":{"status":"ok","timestamp":1671314440508,"user_tz":300,"elapsed":7218,"user":{"displayName":"Nhat Huy Trinh","userId":"12245652219387330779"}},"outputId":"e3d2eb62-34f4-4405-bb41-24a13f0681b2"},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: astropy in /usr/local/lib/python3.8/dist-packages (4.3.1)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.8/dist-packages (from astropy) (1.21.6)\n","Requirement already satisfied: pyerfa>=1.7.3 in /usr/local/lib/python3.8/dist-packages (from astropy) (2.0.0.1)\n","Filename: /content/drive/MyDrive/Github/DataAnalysisProject_SDSS/binaryStarVisit1000.fits\n","No.    Name      Ver    Type      Cards   Dimensions   Format\n","  0  PRIMARY       1 PrimaryHDU       4   ()      \n","  1                1 BinTableHDU     34   1000R x 13C   ['32A', '64A', '1D', '1D', '1K', '1E', '1E', '1E', '64A', '1E', '1E', '1E', '1K']   \n"]}]},{"cell_type":"code","source":["username = \"huytrinh03\"\n","repository = \"DataAnalysisProject_SDSS\"\n","git_token = \"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\"\n","!git config --global user.email \"trinhnhathuy03@gmail.com\"\n","!git config --global user.name \"huytrinh03\"\n","!git remote -v\n","!git commit -m \"Edit Dec 17\"\n","\n","!git push -u origin master\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OJ2cg-InHMcp","executionInfo":{"status":"ok","timestamp":1671315894276,"user_tz":300,"elapsed":976,"user":{"displayName":"Nhat Huy Trinh","userId":"12245652219387330779"}},"outputId":"5c374cff-4823-48a8-d585-e662e9895a87"},"execution_count":60,"outputs":[{"output_type":"stream","name":"stdout","text":["origin\thttps://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@github.com/huytrinh03/DataAnalysisProject_SDSS.git (fetch)\n","origin\thttps://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@github.com/huytrinh03/DataAnalysisProject_SDSS.git (push)\n","On branch main\n","Your branch is up to date with 'origin/main'.\n","\n","Changes not staged for commit:\n","\t\u001b[31mmodified:   main.py\u001b[m\n","\n","no changes added to commit\n","error: src refspec master does not match any.\n","error: failed to push some refs to 'https://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@github.com/huytrinh03/DataAnalysisProject_SDSS.git'\n"]}]}]}